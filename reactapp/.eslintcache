[{"/home/coder/project/workspace/reactapp/src/index.js":"1","/home/coder/project/workspace/reactapp/src/App.js":"2","/home/coder/project/workspace/reactapp/src/reportWebVitals.js":"3","/home/coder/project/workspace/reactapp/src/Data/quizQuestions.js":"4","/home/coder/project/workspace/reactapp/src/components/UI/Button/Button.js":"5","/home/coder/project/workspace/reactapp/src/components/UI/Card/Card.js":"6","/home/coder/project/workspace/reactapp/src/components/UI/Banner/Banner.js":"7"},{"size":500,"mtime":1691336770613,"results":"8","hashOfConfig":"9"},{"size":2693,"mtime":1691336770646,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1691336770613,"results":"11","hashOfConfig":"9"},{"size":1883,"mtime":1691336804044,"results":"12","hashOfConfig":"9"},{"size":499,"mtime":1691336795509,"results":"13","hashOfConfig":"9"},{"size":1302,"mtime":1691336792653,"results":"14","hashOfConfig":"9"},{"size":202,"mtime":1691336798390,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y3j00b",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/coder/project/workspace/reactapp/src/index.js",[],"/home/coder/project/workspace/reactapp/src/App.js",["32"],"import { Component } from \"react\";\nimport classes from \"./App.module.css\"\nimport Button from \"./components/UI/Button/Button\";\nimport Card from \"./components/UI/Card/Card\";\nimport Banner from \"./components/UI/Banner/Banner\"\nimport axios from \"axios\";\nimport questions from './Data/quizQuestions';\n\nclass App extends Component {\n\n  state = {\n    startQuiz : false,\n    questionSet : [],\n    questionsCorrect : 0,\n    questionsInTotal : 5,\n    totalTries : 0,\n    showResult : false\n  }\n\n  onEachTry = () => {\n    this.setState(prevState => (\n      {totalTries : prevState.totalTries + 1}\n    ));\n\n  }\n\n  showEndResult = () => {\n    \n    this.setState(prevState => (\n      {\n        startQuiz: false,\n        showResult : true,\n        questionSet: [],\n        totalTries : 0\n      }\n    ))\n  }\n\n  onAnswerCorrect = () => {\n    if(this.state.questionsCorrect <= this.state.questionsInTotal) {\n      this.setState(prevState => {\n        return {\n          questionsCorrect : prevState.questionsCorrect + 1\n        }\n      })\n    }\n  }\n\n  onQuizToggler = () => {\n    this.setState({startQuiz : true, showResult : false, questionsCorrect : 0, totalTries: 0});\n    this.startQuiz();\n  }\n\n   startQuiz = async () => {\n    \n    let newQuestions = questions;\n    console.log(\"Stared\");\n    // await axios.get(\"http://localhost:8080/\")\n    //     .then(async (res) => {\n\n    //       newQuestions = await res.data;\n    //       console.log(newQuestions);\n\n    //     }).catch((error) => {\n    //       console.log(error);\n    //     })\n\n    let QuestionCards = newQuestions.map((values, ind) => (\n      <Card\n        key={values.questionId}\n        question={values.question}\n        correctAnswerMarkUpdate={this.onAnswerCorrect}\n        attempt={this.onEachTry}\n        options={{\n          option1: values.option1,\n          option2: values.option2,\n          option3: values.option3,\n          option4: values.option4\n        }}\n        answer={values.answer}\n      />\n    ))\n    this.setState({questionSet : QuestionCards, questionsInTotal: QuestionCards.length, startQuiz : true})\n  }\n\n  \n\n  render() {\n\n    return (\n      <div>\n        <h1> <center>Quizz App</center> </h1>\n        {this.state.showResult &&  <Banner>You have answered <b>{this.state.questionsCorrect} / {this.state.questionsInTotal} </b> Correctly</Banner>}\n        {!this.state.startQuiz && <Button click = {this.onQuizToggler}>Start Quiz</Button>}\n        <div className={classes.Questions}>\n          {this.state.questionSet}\n        </div>\n        \n        {this.state.totalTries === this.state.questionsInTotal? <Button click = {this.showEndResult}>Show Results</Button> : null}\n      </div>\n    )\n  }\n\n}\nexport default App;\n","/home/coder/project/workspace/reactapp/src/reportWebVitals.js",[],"/home/coder/project/workspace/reactapp/src/Data/quizQuestions.js",[],"/home/coder/project/workspace/reactapp/src/components/UI/Button/Button.js",[],"/home/coder/project/workspace/reactapp/src/components/UI/Card/Card.js",["33","34"],"import React, { useEffect, useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport classes from \"./Card.module.css\";\n\nconst Card = props => {\n    let [state, setState] = useState({\n        options : props.options,\n        answer : props.answer,\n        isOptionTrue : null\n    });\n\n    const logg = () => console.log(state);\n\n    const checkAnswer = (event) => {\n        props.attempt();\n        if(event.target.innerHTML === state.answer) {\n            setState( prevState => {\n                return {\n                    ...prevState,\n                    isOptionTrue : true\n                }\n            });\n            props.correctAnswerMarkUpdate();\n        }\n        \n        setState(prevState => {\n            return {\n                ...prevState,\n                isUpdatedOnce : true\n            }\n        })\n    }\n\n    const options = Object.keys(props.options).map((optionIndex, ind) => {\n        return (\n            <Button disabled={state.isUpdatedOnce} click={checkAnswer} key={ind} >{props.options[optionIndex]}</Button>\n        )\n    });\n\n    return (\n        <div className={classes.Card}>\n            <h4>{props.question}</h4>\n            <div className={classes.CardOption}>\n                {options}\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","/home/coder/project/workspace/reactapp/src/components/UI/Banner/Banner.js",[],{"ruleId":"35","severity":1,"message":"36","line":6,"column":8,"nodeType":"37","messageId":"38","endLine":6,"endColumn":13},{"ruleId":"35","severity":1,"message":"39","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":26},{"ruleId":"35","severity":1,"message":"40","line":12,"column":11,"nodeType":"37","messageId":"38","endLine":12,"endColumn":15},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'logg' is assigned a value but never used."]